---
// src/components/BlogPost.astro
// Componente para renderizar posts con callouts

import { processObsidianMarkdown } from '../utils/obsidianMarkdown';

export interface Props {
  title: string;
  content: string;
  frontmatter?: any;
}

const { title, content, frontmatter } = Astro.props;
const processedContent = processObsidianMarkdown(content);
---

<article class="blog-post">
  <header class="blog-header">
    <h1>{title}</h1>
    {frontmatter?.pubDate && (
      <time datetime={frontmatter.pubDate}>
        {new Date(frontmatter.pubDate).toLocaleDateString('es-ES', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        })}
      </time>
    )}
    {frontmatter?.tags && (
      <div class="tags">
        {frontmatter.tags.map((tag: string) => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    )}
  </header>
  
  <div class="blog-content obsidian-content" set:html={processedContent} />
</article>

<style>
/* Estilos del blog */
.blog-post {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.blog-header {
  margin-bottom: 3rem;
  text-align: center;
  border-bottom: 1px solid #e5e7eb;
  padding-bottom: 2rem;
}

.blog-header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  color: #111827;
  margin-bottom: 1rem;
  line-height: 1.2;
}

.blog-header time {
  color: #6b7280;
  font-size: 1rem;
  display: block;
  margin-bottom: 1rem;
}

.tags {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.tag {
  background: #f3f4f6;
  color: #374151;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.875rem;
  font-weight: 500;
}

/* Contenido del blog con callouts */
.blog-content {
  line-height: 1.7;
  color: #374151;
  font-size: 1.125rem;
}

.blog-content h1, 
.blog-content h2, 
.blog-content h3, 
.blog-content h4 {
  margin-top: 3rem;
  margin-bottom: 1.5rem;
  font-weight: 700;
  color: #111827;
  line-height: 1.3;
}

.blog-content h1 { font-size: 2rem; }
.blog-content h2 { font-size: 1.75rem; }
.blog-content h3 { font-size: 1.5rem; }
.blog-content h4 { font-size: 1.25rem; }

.blog-content p {
  margin-bottom: 1.5rem;
}

.blog-content ul, .blog-content ol {
  margin: 1.5rem 0;
  padding-left: 2rem;
}

.blog-content li {
  margin-bottom: 0.75rem;
}

.blog-content blockquote {
  border-left: 4px solid #3b82f6;
  padding-left: 1.5rem;
  margin: 2rem 0;
  font-style: italic;
  color: #6b7280;
  font-size: 1.1rem;
}

/* CALLOUT STYLES - Optimizados para blog */
.callout {
  margin: 2.5rem 0;
  padding: 0;
  border-radius: 12px;
  border: 2px solid transparent;
  background: var(--callout-bg);
  overflow: hidden;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
}

.callout:hover {
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  transform: translateY(-2px);
}

.callout-header {
  padding: 16px 20px;
  background: var(--callout-header-bg);
  display: flex;
  align-items: center;
  gap: 12px;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s ease;
  user-select: none;
  border-bottom: 1px solid var(--callout-border);
}

.callout-header:hover {
  background: var(--callout-header-hover, var(--callout-header-bg));
  filter: brightness(0.96);
}

.callout-icon {
  width: 24px;
  height: 24px;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
}

.callout-title {
  color: var(--callout-title-color);
  flex: 1;
  font-weight: 700;
  font-size: 1.1rem;
}

.callout-fold {
  width: 20px;
  height: 20px;
  transition: transform 0.3s ease;
  color: var(--callout-title-color);
  opacity: 0.8;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
}

.callout-fold:hover {
  opacity: 1;
  transform: scale(1.1);
}

.callout.folded .callout-fold {
  transform: rotate(-90deg);
}

.callout-content {
  padding: 20px;
  color: var(--callout-content-color, #374151);
  transition: all 0.3s ease;
  overflow: hidden;
  font-size: 1rem;
  line-height: 1.6;
}

.callout.folded .callout-content {
  max-height: 0;
  padding: 0 20px;
  opacity: 0;
}

.callout-content p:last-child {
  margin-bottom: 0;
}

/* Tipos específicos de callouts */
.callout-note {
  --callout-bg: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  --callout-header-bg: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);
  --callout-border: #94a3b8;
  --callout-title-color: #475569;
  border-color: #64748b;
}

.callout-info {
  --callout-bg: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
  --callout-header-bg: linear-gradient(135deg, #bfdbfe 0%, #93c5fd 100%);
  --callout-border: #60a5fa;
  --callout-title-color: #1d4ed8;
  border-color: #3b82f6;
}

.callout-tip, .callout-hint {
  --callout-bg: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
  --callout-header-bg: linear-gradient(135deg, #bbf7d0 0%, #86efac 100%);
  --callout-border: #4ade80;
  --callout-title-color: #15803d;
  border-color: #22c55e;
}

.callout-important {
  --callout-bg: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
  --callout-header-bg: linear-gradient(135deg, #fde68a 0%, #fcd34d 100%);
  --callout-border: #f59e0b;
  --callout-title-color: #d97706;
  border-color: #f59e0b;
}

.callout-warning, .callout-caution, .callout-attention {
  --callout-bg: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%);
  --callout-header-bg: linear-gradient(135deg, #fed7aa 0%, #fdba74 100%);
  --callout-border: #fb923c;
  --callout-title-color: #ea580c;
  border-color: #f97316;
}

.callout-error, .callout-danger, .callout-failure, .callout-fail {
  --callout-bg: linear-gradient(135deg, #fef2f2 0%, #fecaca 100%);
  --callout-header-bg: linear-gradient(135deg, #fca5a5 0%, #f87171 100%);
  --callout-border: #ef4444;
  --callout-title-color: #dc2626;
  border-color: #ef4444;
}

.callout-success, .callout-check, .callout-done {
  --callout-bg: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
  --callout-header-bg: linear-gradient(135deg, #86efac 0%, #4ade80 100%);
  --callout-border: #22c55e;
  --callout-title-color: #15803d;
  border-color: #16a34a;
}

.callout-question, .callout-help, .callout-faq {
  --callout-bg: linear-gradient(135deg, #fdf4ff 0%, #fae8ff 100%);
  --callout-header-bg: linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%);
  --callout-border: #c084fc;
  --callout-title-color: #9333ea;
  border-color: #a855f7;
}

.callout-bug {
  --callout-bg: linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%);
  --callout-header-bg: linear-gradient(135deg, #fbcfe8 0%, #f9a8d4 100%);
  --callout-border: #ec4899;
  --callout-title-color: #be185d;
  border-color: #ec4899;
}

/* Resaltado y kbd mejorados para blog */
mark {
  background: linear-gradient(120deg, #fef08a 0%, #facc15 50%, #fef08a 100%);
  padding: 2px 4px;
  border-radius: 4px;
  box-decoration-break: clone;
  -webkit-box-decoration-break: clone;
  font-weight: 600;
}

kbd {
  background: linear-gradient(145deg, #f9fafb 0%, #f3f4f6 100%);
  border: 1px solid #d1d5db;
  border-bottom: 2px solid #9ca3af;
  border-radius: 6px;
  padding: 3px 8px;
  font-family: 'SF Mono', 'Monaco', 'Cascadia Code', monospace;
  font-size: 0.9em;
  font-weight: 600;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  white-space: nowrap;
  display: inline-block;
  margin: 0 2px;
}

kbd:active {
  transform: translateY(1px);
  border-bottom-width: 1px;
}

/* Code blocks mejorados para blog */
.code-block-container {
  margin: 2.5rem 0;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
  background: #1f2937;
}

.code-block-header {
  background: linear-gradient(135deg, #374151 0%, #1f2937 100%);
  color: #e5e7eb;
  padding: 16px 20px;
  font-size: 14px;
  font-weight: 600;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #4b5563;
}

.copy-button {
  background: linear-gradient(145deg, #4b5563 0%, #374151 100%);
  border: 1px solid #6b7280;
  color: #e5e7eb;
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 13px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.copy-button:hover {
  background: linear-gradient(145deg, #6b7280 0%, #4b5563 100%);
  border-color: #9ca3af;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.copy-button.copied {
  background: linear-gradient(145deg, #059669 0%, #047857 100%);
  border-color: #10b981;
  color: white;
}

pre {
  margin: 0;
  background: #111827 !important;
  padding: 24px;
  overflow-x: auto;
  font-family: 'SF Mono', 'Monaco', 'Cascadia Code', monospace;
  font-size: 15px;
  line-height: 1.6;
}

pre code {
  color: #e5e7eb;
  background: transparent !important;
}

/* Responsive */
@media (max-width: 768px) {
  .blog-post {
    padding: 1rem;
  }
  
  .blog-header h1 {
    font-size: 2rem;
  }
  
  .blog-content {
    font-size: 1rem;
  }
  
  .callout {
    margin: 2rem 0;
  }
  
  .callout-header, .callout-content {
    padding: 16px;
  }
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  .blog-post {
    background: #0f172a;
    color: #e2e8f0;
  }
  
  .blog-header {
    border-color: #334155;
  }
  
  .blog-header h1 {
    color: #f1f5f9;
  }
  
  .blog-content {
    color: #cbd5e1;
  }
  
  .blog-content h1, 
  .blog-content h2, 
  .blog-content h3, 
  .blog-content h4 {
    color: #f8fafc;
  }
  
  .tag {
    background: #334155;
    color: #e2e8f0;
  }
}
</style>

<script>
// Funcionalidad mejorada para blog posts
document.addEventListener('DOMContentLoaded', () => {
  // Toggle para callouts
  window.toggleCallout = function(header) {
    const callout = header.closest('.callout');
    if (callout && callout.dataset.collapsible === 'true') {
      callout.classList.toggle('folded');
      
      // Animación suave
      const content = callout.querySelector('.callout-content');
      if (callout.classList.contains('folded')) {
        content.style.maxHeight = '0';
        content.style.opacity = '0';
      } else {
        content.style.maxHeight = content.scrollHeight + 'px';
        content.style.opacity = '1';
      }
    }
  };

  // Copia de código mejorada
  window.copyCode = async function(button, codeContent) {
    try {
      await navigator.clipboard.writeText(codeContent);
      const originalText = button.textContent;
      
      button.textContent = '✓ ¡Copiado!';
      button.classList.add('copied');
      
      // Vibración en dispositivos móviles
      if (navigator.vibrate) {
        navigator.vibrate(50);
      }
      
      setTimeout(() => {
        button.textContent = originalText;
        button.classList.remove('copied');
      }, 2500);
    } catch (err) {
      console.error('Error al copiar:', err);
      button.textContent = '⚠ Error';
      setTimeout(() => {
        button.textContent = 'Copiar';
      }, 2000);
    }
  };

  // Procesamiento automático de código
  const codeBlocks = document.querySelectorAll('.blog-content pre code');
  
  codeBlocks.forEach((codeBlock) => {
    const pre = codeBlock.parentElement;
    
    if (pre.parentElement.classList.contains('code-block-container')) {
      return;
    }
    
    const language = codeBlock.className.match(/language-(\w+)/)?.[1] || 'text';
    const codeContent = codeBlock.textContent;
    
    const container = document.createElement('div');
    container.className = 'code-block-container';
    
    const header = document.createElement('div');
    header.className = 'code-block-header';
    
    const languageSpan = document.createElement('span');
    languageSpan.textContent = language.toUpperCase();
    
    const copyButton = document.createElement('button');
    copyButton.className = 'copy-button';
    copyButton.textContent = 'Copiar';
    copyButton.onclick = () => window.copyCode(copyButton, codeContent);
    
    header.appendChild(languageSpan);
    header.appendChild(copyButton);
    
    pre.parentNode.insertBefore(container, pre);
    container.appendChild(header);
    container.appendChild(pre);
  });

  // Smooth scroll para headers con anclas
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
});
</script>