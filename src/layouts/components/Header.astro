---
import HeaderLink from './HeaderLink.astro';
import { Image } from 'astro:assets';
import AvaLogo from '@src/assets/img/small-ava.jpg';
import GithubWhite from '@src/assets/img/github-mark-white.svg';
import GithubBlack from '@src/assets/img/github-mark.svg';

const menu = [
  { link: '/about/', label: 'About' },
  { link: '/posts/', label: 'Posts' },
  { link: '/projects/', label: 'Projects' },
  { link: '/tags/', label: 'Tags' },
];
---

<header id='site-header' class='flex items-center w-full transition duration-300 z-[999] border-[var(--soft-border-color)]'>
  <div class='container'>
    <nav class='flex gap-4 items-center justify-between py-3'>
      <h2 class='m-0'>
        <a href='/' class='flex gap-4 items-center text-xl font-black uppercase'>
          <Image src={AvaLogo} alt='Your site name' class="rounded-full w-11 border-white border-2 shadow-lg"/> 
        </a>
      </h2>
      
      <div class='flex items-center'>
        <!-- Google Translate Widget (oculto) -->
        <div id="google_translate_element" class="hidden"></div>
        
        <!-- Selector de idioma -->
        <div class="relative" id="languageSelector">
          <button class='p-3 flex items-center gap-1 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors' id='languageToggle'>
            <span id="currentLanguage" class="text-sm font-semibold">ESP</span>
            <svg class="w-4 h-4 transition-transform" id="languageArrow" xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'>
              <path d="m6 9 6 6 6-6"/>
            </svg>
          </button>
          
          <div id="languageDropdown" class="absolute top-full right-0 mt-1 bg-white dark:bg-zinc-900 border dark:border-zinc-700 rounded-lg shadow-lg min-w-[120px] z-[1000] hidden">
            <div class="py-1">
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="" data-label="ESP">
                <span>Español</span>
                <span class="text-xs opacity-60">ESP</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="en" data-label="ENG">
                <span>English</span>
                <span class="text-xs opacity-60">ENG</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="fr" data-label="FRA">
                <span>Français</span>
                <span class="text-xs opacity-60">FRA</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="de" data-label="DEU">
                <span>Deutsch</span>
                <span class="text-xs opacity-60">DEU</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="it" data-label="ITA">
                <span>Italiano</span>
                <span class="text-xs opacity-60">ITA</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="pt" data-label="POR">
                <span>Português</span>
                <span class="text-xs opacity-60">POR</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="ru" data-label="RUS">
                <span>Русский</span>
                <span class="text-xs opacity-60">RUS</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="ja" data-label="JPN">
                <span>日本語</span>
                <span class="text-xs opacity-60">JPN</span>
              </button>
              <button class="language-option w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-800 flex items-center justify-between" data-lang="ko" data-label="KOR">
                <span>한국어</span>
                <span class="text-xs opacity-60">KOR</span>
              </button>
            </div>
          </div>
        </div>
        
        <!-- GitHub links -->
        <a class='p-3 dark:hidden' href='https://github.com/devaradise/devolio' target='_blank'>
          <Image src={GithubBlack} width={24} height={24} alt='Github logo' />
        </a>
        <a class='p-3 hidden dark:block' href='https://github.com/devaradise/devolio' target='_blank'>
          <Image src={GithubWhite} width={24} height={24} alt='Github logo' />
        </a>
        
        <!-- Theme toggle -->
        <button class='p-3' id='themeToggle'>
          <svg class='sun' xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'>
            <circle cx='12' cy='12' r='4'></circle>
            <path d='M12 2v2'></path>
            <path d='M12 20v2'></path>
            <path d='m4.93 4.93 1.41 1.41'></path>
            <path d='m17.66 17.66 1.41 1.41'></path>
            <path d='M2 12h2'></path>
            <path d='M20 12h2'></path>
            <path d='m6.34 17.66-1.41 1.41'></path>
            <path d='m19.07 4.93-1.41 1.41'></path>
          </svg>
          <svg class='moon' xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2'>
            <path d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'></path>
          </svg>
        </button>
      </div>
    </nav>
    
    <!-- Navigation menu -->
    <div class='fixed top-3 w-auto max-w-full px-3 left-1/2 -translate-x-1/2 z-[999]' id='navigation-menu'>
      <div class="flex px-2.5 bg-white/90 dark:bg-zinc-900/75 backdrop-blur-md leading-tight rounded-full border dark:border-zinc-700">
        <div class="px-2.5 text-sm">
          <HeaderLink class="py-3 flex items-center" href="/">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.7">
              <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"/>
              <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
            </svg>
          </HeaderLink>
        </div>
        {menu.map((item) => (
          <>
            <div class="flex items-center">
              <span class="text-current opacity-30">|</span>
            </div>
            <div class='px-2.5 text-sm'>
              <HeaderLink class="py-3 flex items-center" href={item.link}>
                {item.label}
              </HeaderLink>
            </div>
          </>
        ))}
      </div>
    </div>
  </div>

  <style is:global>
    #themeToggle .moon { display: none; }
    .dark #themeToggle .sun { display: none; }
    .dark #themeToggle .moon { display: block; }
    
    .goog-te-banner-frame.skiptranslate { display: none !important; }
    body { top: 0px !important; }
    .goog-te-gadget-icon { display: none !important; }
    .goog-te-gadget-simple { background-color: transparent !important; border: none !important; }
    
    #navigation-menu { display: block !important; visibility: visible !important; opacity: 1 !important; }
    #languageDropdown { transition: all 0.2s ease-out; }
    #languageDropdown.hidden { opacity: 0; transform: translateY(-10px); }
    .language-option.active { background-color: #3b82f6; color: white; }
    #languageArrow { transition: transform 0.2s; }
    #languageArrow.rotate { transform: rotate(180deg); }
  </style>

  <script is:inline>
    // Variables globales
    let isLoaded = false;
    let currentLang = '';
    
    const langMap = { '': 'ESP', 'en': 'ENG', 'fr': 'FRA', 'de': 'DEU', 'it': 'ITA', 'pt': 'POR', 'ru': 'RUS', 'ja': 'JPN', 'ko': 'KOR' };

    // Google Translate init
    function googleTranslateElementInit() {
      new google.translate.TranslateElement({
        pageLanguage: 'es',
        includedLanguages: 'en,fr,de,it,pt,ru,ja,ko',
        autoDisplay: false
      }, 'google_translate_element');
      
      setTimeout(() => {
        isLoaded = true;
        detectLanguage();
      }, 1000);
    }

    // Detectar idioma actual
    function detectLanguage() {
      const url = window.location.href;
      const match = url.match(/#googtrans\(es\|([^)]+)\)/);
      
      if (match && match[1]) {
        updateUI(match[1], langMap[match[1]] || match[1].toUpperCase());
      } else {
        updateUI('', 'ESP');
      }
    }

    // Cambiar idioma
    function changeLanguage(code, label) {
      if (code === '') {
        window.location.hash = '';
        window.location.reload();
        return;
      }

      const select = document.querySelector('.goog-te-combo');
      if (select) {
        for (let i = 0; i < select.options.length; i++) {
          if (select.options[i].value.includes(`|${code}`)) {
            select.selectedIndex = i;
            select.dispatchEvent(new Event('change'));
            break;
          }
        }
      }
      
      updateUI(code, label);
      currentLang = code;
    }

    // Actualizar UI
    function updateUI(code, label) {
      const current = document.getElementById('currentLanguage');
      if (current) current.textContent = label;
      
      document.querySelectorAll('.language-option').forEach(opt => {
        opt.classList.toggle('active', opt.dataset.lang === code);
      });
    }

    // Toggle dropdown
    function toggleDropdown() {
      const dropdown = document.getElementById('languageDropdown');
      const arrow = document.getElementById('languageArrow');
      
      dropdown.classList.toggle('hidden');
      arrow.classList.toggle('rotate');
    }

    // Theme toggle
    function initTheme() {
      const theme = localStorage.getItem('theme') || 
        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      
      document.documentElement.classList.toggle('dark', theme === 'dark');
      localStorage.setItem('theme', theme);
    }

    function toggleTheme() {
      const isDark = document.documentElement.classList.toggle('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', () => {
      initTheme();
      
      // Theme toggle
      document.getElementById('themeToggle')?.addEventListener('click', toggleTheme);
      
      // Language toggle
      document.getElementById('languageToggle')?.addEventListener('click', toggleDropdown);
      
      // Language options
      document.querySelectorAll('.language-option').forEach(opt => {
        opt.addEventListener('click', (e) => {
          e.stopPropagation();
          toggleDropdown();
          changeLanguage(opt.dataset.lang, opt.dataset.label);
        });
      });

      // Close dropdown on outside click
      document.addEventListener('click', (e) => {
        if (!document.getElementById('languageSelector').contains(e.target)) {
          document.getElementById('languageDropdown').classList.add('hidden');
          document.getElementById('languageArrow').classList.remove('rotate');
        }
      });
    });

    // URL change detection
    let lastUrl = location.href;
    new MutationObserver(() => {
      if (location.href !== lastUrl) {
        lastUrl = location.href;
        setTimeout(detectLanguage, 500);
      }
    }).observe(document, { subtree: true, childList: true });
  </script>

  <!-- Carga async de Google Translate -->
  <script async src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
</header>